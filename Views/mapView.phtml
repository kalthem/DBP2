<?php
session_start();
$baseUrl = 'http://20.126.5.244/~u202103011/BorrowMyCharger';

// Include your database connection
require_once __DIR__ . '/../db_connect.php';
$database = Database::getInstance();
$pdo = $database->getdbConnection();

// Fetch charge points with latitude and longitude
$stmt = $pdo->prepare("SELECT c.id, c.location_id, c.charger_type, l.city, l.latitude, l.longitude 
                       FROM charge_point c 
                       JOIN location l ON c.location_id = l.id");
$stmt->execute();
$chargePoints = $stmt->fetchAll(PDO::FETCH_ASSOC);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Map View - Charging Points</title>

    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="<?= $baseUrl ?>/lib/leaflet/leaflet.css">

    <!-- Custom CSS -->
    <link rel="stylesheet" href="<?= $baseUrl ?>/css/mapView.css">

    <!-- Bootstrap -->
    <link rel="stylesheet" href="<?= $baseUrl ?>/css/bootstrap.min.css">

    <!-- Leaflet JS -->
    <script src="<?= $baseUrl ?>/lib/leaflet/leaflet.js"></script>
</head>
<body>

<?php include __DIR__ . '/template/header.phtml'; ?>

<div class="container mt-5">
    <h2>Available Charging Points on Map</h2>

    <!-- Filter Form -->
    <form id="filter-form" method="GET">
        <div class="row mt-4">
            <div class="col-md-4">
                <input type="text" id="citySearch" name="citySearch" class="form-control" placeholder="Search by City">
            </div>
            <div class="col-md-4">
                <input type="text" id="chargerTypeSearch" name="chargerTypeSearch" class="form-control" placeholder="Charger Type">
            </div>
            <div class="col-md-4">
                <select id="availabilityFilter" name="availabilityFilter" class="form-select">
                    <option value="">Filter by Availability</option>
                    <option value="available">Available</option>
                    <option value="in_use">In Use</option>
                    <option value="offline">Offline</option>
                </select>
            </div>
        </div>
    </form>

    <!-- Map -->
    <div id="map" class="mt-4" style="height: 500px;"></div>
</div>

<?php include __DIR__ . '/template/footer.phtml'; ?>

<!-- JavaScript Logic -->
<script>
var chargePoints = <?= json_encode($chargePoints); ?>;
let map = L.map('map').setView([26.2285, 50.5861], 12);

// Add tile layer
L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '&copy; OpenStreetMap contributors'
}).addTo(map);

// Show user location
if ("geolocation" in navigator) {
    navigator.geolocation.getCurrentPosition(function (position) {
        const userLat = position.coords.latitude;
        const userLon = position.coords.longitude;
        L.marker([userLat, userLon])
            .addTo(map)
            .bindPopup("You are here")
            .openPopup();
        map.setView([userLat, userLon], 13);
    });
}

let chargePointMarkers = [];

function displayAllMarkers() {
    chargePoints.forEach(cp => {
        if (cp.latitude && cp.longitude) {
            const marker = L.marker([parseFloat(cp.latitude), parseFloat(cp.longitude)]).addTo(map);
            marker.bindPopup(`
                <strong>${cp.city}</strong><br>
                Charger Type: ${cp.charger_type}<br>
                <a href="index.php?action=bookchargepoint&id=${cp.id}" class="btn btn-sm btn-primary mt-1">Book</a>
            `);
            chargePointMarkers.push(marker);
        }
    });
}

function updateMap(data) {
    chargePointMarkers.forEach(marker => map.removeLayer(marker));
    chargePointMarkers = [];

    data.forEach(cp => {
        if (cp.latitude && cp.longitude) {
            const marker = L.marker([parseFloat(cp.latitude), parseFloat(cp.longitude)]).addTo(map);
            marker.bindPopup(`
                <strong>${cp.city}</strong><br>
                Charger Type: ${cp.charger_type}<br>
                <a href="index.php?action=bookchargepoint&id=${cp.id}" class="btn btn-sm btn-primary mt-1">Book</a>
            `);
            chargePointMarkers.push(marker);
        }
    });
}

function updateData() {
    const form = document.getElementById('filter-form');
    const formData = new FormData(form);
    const params = new URLSearchParams(formData).toString();

    const xhr = new XMLHttpRequest();
    xhr.open('GET', 'Controller/getFilteredChargePoints.php?' + params, true);
    xhr.onload = function () {
        if (xhr.status === 200) {
            try {
                const data = JSON.parse(xhr.responseText);
                updateMap(data);
            } catch (e) {
                console.error("Invalid JSON from server:", xhr.responseText);
            }
        }
    };
    xhr.send();
}

let debounceTimer;
document.getElementById('filter-form').addEventListener('input', function () {
    clearTimeout(debounceTimer);
    debounceTimer = setTimeout(updateData, 300);
});

displayAllMarkers();
</script>

</body>
</html>
